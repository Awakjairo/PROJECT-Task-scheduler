name: Task Scheduler CI

on:
  push:
    branches: [ main, develop, 'feature/**', 'bugfix/**', 'hotfix/**', 'release/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint code
      run: npm run lint
      continue-on-error: true
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build --if-present
    
    - name: Generate test coverage report
      run: npm run test:coverage
      continue-on-error: true
    
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/
      if: success() || failure()
    
    - name: Check for vulnerabilities
      run: npm audit
      continue-on-error: true

  deploy-preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build --if-present
    
    - name: Deploy to preview environment
      run: |
        echo "Deploying to preview environment..."
        # Add deployment steps here when ready
        echo "Preview URL: https://preview-${{ github.event.pull_request.number }}.task-scheduler-app.example.com"
      # This is a placeholder. Add actual deployment steps when you have a hosting provider.

  deploy-production:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build --if-present
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add deployment steps here when ready
      # This is a placeholder. Add actual deployment steps when you have a hosting provider.
      